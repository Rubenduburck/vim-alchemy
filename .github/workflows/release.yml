name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        default: 'v0.1.0'
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        required: true
        default: true

env:
  CARGO_TERM_COLOR: always
  BINARY_NAME: vim-alchemy

jobs:
  release-linux:
    name: Release - ${{ matrix.platform.release_for }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        platform:
          # Linux x86_64
          - release_for: Linux-x86_64
            target: x86_64-unknown-linux-gnu
            binary_postfix: ""
            cross: false
            
          # Linux aarch64 (ARM64)
          - release_for: Linux-aarch64
            target: aarch64-unknown-linux-gnu
            binary_postfix: ""
            cross: true
            
          # Linux armv7 (32-bit ARM)
          - release_for: Linux-armv7
            target: armv7-unknown-linux-gnueabihf
            binary_postfix: ""
            cross: true

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgmp-dev
          
      - name: Install cross-compilation dependencies (aarch64)
        if: matrix.platform.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu
          
      - name: Install cross-compilation dependencies (armv7)
        if: matrix.platform.target == 'armv7-unknown-linux-gnueabihf'
        run: |
          sudo apt-get install -y gcc-arm-linux-gnueabihf
          
      - name: Install cross-compilation tool
        if: matrix.platform.cross
        run: cargo install cross
        
      - name: Build (Cross)
        if: matrix.platform.cross
        run: |
          cross build --verbose --release --target ${{ matrix.platform.target }}
          
      - name: Build (Native)
        if: "!matrix.platform.cross"
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.platform.target }}
          
      - name: Prepare assets
        shell: bash
        run: |
          mkdir -p release/
          if [ "${{ matrix.platform.cross }}" = "true" ]; then
            cp target/${{ matrix.platform.target }}/release/${{ env.BINARY_NAME }}${{ matrix.platform.binary_postfix }} release/
          else
            cp target/${{ matrix.platform.target }}/release/${{ env.BINARY_NAME }}${{ matrix.platform.binary_postfix }} release/
          fi
          
          # Include additional files
          cp README.md release/ || true
          cp LICENSE* release/ || true
          
          # Create archive
          cd release
          tar -czf ../${{ env.BINARY_NAME }}-${{ matrix.platform.release_for }}.tar.gz *
          cd ..
          
      - name: Generate SHA-256 checksums
        shell: bash
        run: |
          sha256sum ${{ env.BINARY_NAME }}-${{ matrix.platform.release_for }}.tar.gz > ${{ env.BINARY_NAME }}-${{ matrix.platform.release_for }}.sha256
          
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ env.BINARY_NAME }}-${{ matrix.platform.release_for }}.*
          generate_release_notes: true
          prerelease: ${{ github.event.inputs.prerelease || false }}
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  checksums:
    needs: release-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        
      - name: Combine checksums
        run: |
          find . -name "*.sha256" -exec cat {} \; > SHA256SUMS
          
      - name: Upload checksums
        uses: softprops/action-gh-release@v1
        with:
          files: SHA256SUMS
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
